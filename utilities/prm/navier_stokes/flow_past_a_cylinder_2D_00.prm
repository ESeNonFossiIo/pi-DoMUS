################################################################################
#   This parameter files solves for a navier stokes flow past a cylinder
################################################################################

subsection Navier Stokes Interface

  set CG Solver tolerance                  = 1e-8
  set GMRES Solver tolerance               = 1e-8
  
  set Block of differential components     = 1,0
  set Blocking of the finite element       = u,u,p
  set Enable convection term ((\nabla u)u) = true
  set Enable dynamic term (\partial_t u)   = true
  set Non linear term                      = linear
  set Finite element space                 = FESystem[FE_Q(2)^d-FE_Q(1)]
  set Linearize using time                 = true
  
  set Preconditioner                       = cah-cha
  
  set Invert Mp using inverse_operator     = true
  set Invert Ap using inverse_operator     = false
  
  set div-grad stabilization parameter     = 1
  
  set nu [Pa s]                            = 2.5e-4
  
  set rho [kg m^3]                         = 1.0

  set Compute sigma on the obstacle        = false
end

subsection piDoMUS
  set Adaptive refinement                            = true
  set Refine mesh during transient                   = true

  set Enable finer preconditioner                    = true
  set Max iterations                                 = 0
  set Max iterations finer prec.                     = 0
  
  set Initial global refinement                      = 4
  set Number of cycles                               = 1
  set Overwrite Newton's iterations                  = false
  set Print some useful informations about processes = true
  
  set Time stepper                                   = euler
  
  set Use direct solver if available                 = true
end

subsection AMG for A
  set Aggregation threshold              = 10
  set Coarse type                        = Amesos-KLU
  set Elliptic                           = false
  set High Order Elements                = true
  set Number of cycles                   = 1
  set Output details                     = false
  set Smoother overlap                   = 0
  set Smoother sweeps                    = 2
  set Smoother type                      = Chebyshev
  set Variable related to constant modes = u
  set w-cycle                            = false
end

subsection AMG for Ap
  set Aggregation threshold              = 2
  set Coarse type                        = Amesos-KLU
  set Elliptic                           = true
  set High Order Elements                = false
  set Number of cycles                   = 1
  set Output details                     = false
  set Smoother overlap                   = 0
  set Smoother sweeps                    = 2
  set Smoother type                      = Chebyshev
  set Variable related to constant modes = p
  set w-cycle                            = false
end

subsection Dirichlet boundary conditions

  set IDs and component masks = 2 = u % 1=u % 4=u
  set IDs and expressions     = 2 = k * ( 1-y^2 ) * ( t<tau ? (1/tau) *t:1 );0;0 % 4=0;0;0 % 1=0;0;0
  set Known component names   = u,u,p
  set Used constants          = k=1, tau=0.5
end

subsection Exact solution
  set Function constants  =
  set Function expression = 0; 0; 0
  set Variable names      = x, y, t
end

subsection Domain
  set Grid to generate           = file
  set Input grid file name       = \
      ../utilities/grids/2D/rectangle_with_circular_hole.ucd
  set Colorize                   = true
  set Manifold descriptors       = 4=HyperBallBoundary
  set Optional Point<spacedim> 1 = 0,0
  set Optional double 1          = .2
  set Output grid file name      = output.vtk
end


subsection KINSOL for IMEX
  # Allowed values [0,3]
  set Level of verbosity of the KINSOL solver            = 0

  # Maximum number of nonlinear iterations that can be done with an outdated
  # Jacobian.
  # If set to 1 the Jacobian is updated at each nonlinear iteration
  set Maximum number of iteration before Jacobian update = 1

  # The non-linear solver will stop when reaching this number ofNewton
  # iterations no matter what.
  set Maximum number of iterations                       = 200

  # The Newton method will terminate when the maximum scaled step is below the
  # given tolerance.
  set Step tolerance                                     = 1e-7

  # newton        = basic Newton iteration
  # global_newton = Newton with line search
  # fixed_point   = fixed-point iteration with Anderson Acceleration
  # picard        = Picard iteration with Anderson Acceleration
  set Strategy                                           = global_newton

  # This define the condition (small residual) for a successful completion of
  # KINSOL.
  # 0 means the default value for KINSOL
  set Tolerance for residuals                            = 1e-6

  # If true the dense direct linear solver of KINSOL is used
  set Use internal KINSOL direct solver                  = false
end

subsection IMEX Parameters
  set Final time                                   = 1.000000
  set Initial time                                 = 0.000000
  
  set Absolute error tolerance                     = 1e-6
  set Relative error tolerance                     = 1e-4
  
  set Intervals between outputs                    = 10
  # At each inner iteration the Jacobian is NOT updated.
  set Maximum number of inner nonlinear iterations = 3

  # At each outer iteration the Jacobian is updated if it is set that the
  # Jacobian is continuously updated and a cycle of inner iterations is
  # perfomed.
  set Maximum number of outer nonlinear iterations = 5

  # Fixed alpha means that the parsed alpha is used in each Newton iteration
  # LS_backtracking is the line search with backtracking method.
  set Method used                                  = LS_backtracking
  set Newton relaxation parameter                  = 1.000000

  # In the line seach method with backtracking the following alphas are
  # tested: 1, 1/2, 1/4,..., 2^-i. This parameter sets the maximum i.
  set Number of elements in backtracking sequence  = 5
  set Print useful informations                    = false

  # Conditional statement can be used as well:
  # (t<0.5?1e-2:1e-3)
  set Step size                                    = (t<0.5 ? 5e-4 : 1e-3)
  set Update continuously Jacobian                 = true
  set Use the KINSOL solver                        = true
end

subsection Output Parameters
  set Incremental run prefix          =
  set Files to save in run directory  =
  set Output format         	        = vtu
  set Output partitioning  	          = false
  set Problem base name      	        = flow_past_a_cylinder_2D
  set Solution names         	        = u
  set Subdivisions           	        = 1
end

subsection Refinement
  # Coarsening fraction.
  set Bottom fraction                        = 0.1

  # Maximum number of cells.
  set Maximum number of cells (if available) = 200000

  # Maximum number of cells.
  set Order (optimize)                       = 2

  # Refinement strategy to use. fraction|number
  set Refinement strategy                    = fraction

  # Refinement fraction.
  set Top fraction                           = 0.4
end
